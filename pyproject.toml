[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "deckbuilder"
version = "1.2.6"
description = "Microsoft PowerPoint, presentation slide library, MCP server and CLI tools. Designed for LLM generation of PPTX slides."
readme = "README.md"
requires-python = ">=3.11"
license = {text = "Apache-2.0"}
authors = [
{name = "Bruce McLeod"},
]
keywords = ["mcp", "powerpoint", "presentations", "automation", "content-first", "template-management", "image-processing", "cli"]
classifiers = [
"Development Status :: 4 - Beta",
"Intended Audience :: End Users/Desktop",
"Intended Audience :: Developers",
"License :: OSI Approved :: Apache Software License",
"Programming Language :: Python :: 3",
"Programming Language :: Python :: 3.11",
"Programming Language :: Python :: 3.12",
"Programming Language :: Python :: 3.13",
"Topic :: Office/Business :: Office Suites",
"Topic :: Software Development :: Libraries :: Python Modules",
"Topic :: Multimedia :: Graphics :: Graphics Conversion",
"Topic :: Scientific/Engineering :: Artificial Intelligence",
"Environment :: Console",
"Operating System :: OS Independent",
]

dependencies = [
"fastmcp>=0.3.0",
"python-pptx>=1.0.0",
"python-dotenv>=1.0.0",
"pyyaml>=6.0.0",
"opencv-python>=4.8.0",
"Pillow>=10.0.0",
"numpy>=1.24.0"
]

[project.optional-dependencies]
test = [
"pytest>=7.0.0",
"pytest-cov>=4.0.0",
"pytest-mock>=3.10.0",
"pytest-xdist>=3.0.0",
"pytest-html>=3.0.0",
"pytest-asyncio>=0.21.0",
]
lint = [
"flake8>=5.0.0",
"flake8-length>=0.3.0",
"bandit>=1.7.5"
]
format = [
"black>=22.0.0",
]
dev = [
"deckbuilder[test,lint,format]",
"tomli>=2.0.1",
"black[jupyter]>=24.4.0"
]

[project.urls]
Homepage = "https://github.com/teknologika/deckbuilder"
Repository = "https://github.com/teknologika/deckbuilder.git"
Issues = "https://github.com/teknologika/deckbuilder/issues"
Documentation = "https://github.com/teknologika/deckbuilder/blob/main/README.md"
Changelog = "https://github.com/teknologika/deckbuilder/releases"
"Bug Reports" = "https://github.com/teknologika/deckbuilder/issues"
"Source Code" = "https://github.com/teknologika/deckbuilder"

[project.scripts]
deckbuilder = "deckbuilder.cli:main"
deckbuilder-server = "mcp_server.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"deckbuilder" = [
"layout_intelligence.json",
"assets/templates/*.pptx",
"assets/templates/*.json",
"assets/master_default_presentation.*"
]
"placekitten" = ["images/*", "README.md"]
"*" = ["*.json", "*.md"]

[tool.black]
line-length = 200
target-version = ['py311']
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
"--verbose",
"--strict-markers",
"--tb=short",
"--disable-warnings",
"--cov=src",
"--cov-report=term-missing",
"--cov-report=html",
]
filterwarnings = [
"ignore::pytest.PytestUnknownMarkWarning",
"ignore::UserWarning",
"ignore::DeprecationWarning",
]
markers = [
"unit: Unit tests",
"integration: Integration tests",
"slow: Slow running tests",
"deckbuilder: Deckbuilder engine tests",
"mcp_server: MCP server tests",
"requires_template: Tests that require template files",
"requires_pptx: Tests that require PowerPoint files",
"cleanup: Cleanup and teardown tests",
"asyncio: Async tests that use asyncio",
]

[tool.coverage.run]
source = ["src"]
omit = [
"*/tests/*",
"*/test_*",
"*/__pycache__/*",
"*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
"pragma: no cover",
"def __repr__",
"if self.debug:",
"if settings.DEBUG",
"raise AssertionError",
"raise NotImplementedError",
"if 0:",
"if __name__ == .__main__.:",
"class .*\\bProtocol\\):",
"@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 200
ignore = ["E203", "W503", "E501"]
# File length limit (500 lines as per CLAUDE.md requirement)
max-module-lines = 500
exclude = [
".git",
"__pycache__",
"build",
"dist",
"*.egg-info",
".venv",
".pytest_cache"
]
